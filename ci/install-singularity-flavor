#!/bin/sh

set -o nounset
set -o errexit

# check if passed version string is a valid version
# ARGS
#  1 - version string to test
validate_version() {
  expr "${1}" : '^[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*$' > /dev/null
}

error() {
  printf >&2 "\033[1;31mERROR: \033[0m\033[31m%s\033[0m\n" "$*"
}

inf() {
  printf "\033[1mINFO: \033[0m%s\n" "$*"
}

install_from_deb() {
  # go to temp dir
  tmp_dir="$(mktemp -d)"
  cd "${tmp_dir}"
  wget \
    --no-verbose \
    -O package.deb \
    "${1}"
  inf "Downloaded deb build"
  sudo apt-get install ./package.deb
  inf "Installed with apt-get install"
  cd
  if [ -n "${tmp_dir}" ] && [ -e "${tmp_dir}" ]; then
    rm -rf "${tmp_dir}"
  fi
}

# install one of the two available original recipe singularity
# ARGS
#  1 - version, must be 3.8.6 or 3.8.7
singularity() {
  if [ ! "${1}" = "3.8.6" ] && [ ! "${1}" = "3.8.7" ]; then
    error "Unsupported version number '${1}' for original recipe singularity."
    exit 1
  fi
  install_from_deb \
    "https://github.com/apptainer/singularity/releases/download/v${1}/singularity-container_${1}_amd64.deb"
}

# install one of the versions of apptainer
# ARGS
#  1 - version string without preceding v
apptainer() {
  install_from_deb \
    "https://github.com/apptainer/apptainer/releases/download/v${1}/apptainer_${1}_amd64.deb"
}

# install one of the versions of sylabs
# ARGS
#  1 - version string without preceding v
sylabs() {
  install_from_deb \
    "https://github.com/sylabs/singularity/releases/download/v${1}/singularity-ce_${1}-jammy_amd64.deb"
}

help() {
  cat<<\HELP

  install a singularity flavor on Debian distros using apt-get and deb builds on GitHub.

  This script is highly specialized and mainly meant to help the ubuntu-based GitHub
  testing actions be a bit more streamlined and contain less copied code. This *will*
  not work on non-debian distros and *may* not work on non-ubuntu flavors. I've only
  tested this locally within an ubuntu VM.

 USAGE:

  ./ci/install-singularity-flavor [options] {FLAVOR = singularity|apptainer|sylabs} X.Y.Z

 ARGUMENTS
  FLAVOR : singularity (original recipe, before sylabs split and apptainer rebranded),
           apptainer (container runner supported by Linux Foundation),
           sylabs (SingularityCE maintained by Sylabs)
  X.Y.Z  : version string to install

 OPTIONS
  -h, --help : print this help and exit

HELP
}

if [ "$#" -eq 0 ]; then
  help
  exit 0
fi

flavor=""
version=""
while [ "$#" -gt 0 ]; do
  case "$1" in
    -h|--help)
      help
      exit 0
      ;;
    -*)
      error "Unrecognized option '$1'"
      exit 1
      ;;
    *)
      if [ -z "${flavor}" ]; then
        case "$1" in
          singularity|apptainer|sylabs)
            flavor="$1"
            ;;
          *)
            error "Unrecognized flavor '$1'"
            exit 1
            ;;
        esac
      elif [ -z "${version}" ]; then
        if validate_version "$1"; then
          version="$1"
        else
          error "version string '$1' does not match X.Y.Z"
          exit 1
        fi
      else
        error "Only two position arguments accepted: FLAVOR X.Y.Z"
        exit 1
      fi
      ;;
  esac
  shift
done

${flavor} "${version}"
