.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "DENV" "1" "Dec 2023" "denv" "User Manual"
.hy
.SH NAME
.PP
denv init
.SH SYNOPSIS
.PP
\f[B]denv init\f[R] [help|-h|\[en]help] IMAGE [WORKSPACE]
[\[en]no-gitignore] [\[en]clean-env|\[en]no-copy-all] [\[en]force]
[\[en]name NAME]
.SH OPTIONS
.PP
\f[B]\f[CB]--help\f[B]\f[R], \f[B]\f[CB]-h\f[B]\f[R], or
\f[B]\f[CB]help\f[B]\f[R] print a short help message for
\f[B]\f[CB]denv\f[B]\f[R] or one of its sub commands
.PP
\f[B]\f[CB]--no-gitignore\f[B]\f[R] do not generate a gitignore file
when setting up a new denv configuration
.PP
\f[B]\f[CB]--clean-env\f[B]\f[R] or \f[B]\f[CB]--no-copy-all\f[B]\f[R]
do not enable copying of all host environment variables within the new
denv.
Later activation (or deactivation) of copying all host environment
variables can be done with \f[B]\f[CB]denv config env all\f[B]\f[R] See
\f[B]denv-config(1)\f[R] for details on
\f[B]\f[CB]denv config\f[B]\f[R].
.PP
\f[B]\f[CB]--force\f[B]\f[R] forces re-initialization of a denv even if
the current workspace has one
.PP
\f[B]\f[CB]--name\f[B]\f[R] sets the name for the denv workspace that is
being initialized
.SH ARGUMENTS
.PP
\f[B]\f[CB]IMAGE\f[B]\f[R] the name of a container image to use when
starting a container to host the developer environment
.PP
\f[B]\f[CB]WORKSPACE\f[B]\f[R] the directory where the environment
should be stored and configured, used by default as the home directory
within the developer environment so that the environment can also have
its own shell configuration files and \f[B]\[ti]/.local\f[R] paths.
.SH SEE ALSO
.PP
\f[B]denv(1)\f[R], \f[B]denv-config(1)\f[R]
